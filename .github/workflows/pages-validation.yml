name: Publish validation dashboard

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  schedule:
    - cron: '15 6 * * *'   # daily at 06:15 UTC

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages-validation
  cancel-in-progress: true

jobs:
  validate-and-build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # ---------- Node (frontend) ----------
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json
            frontend/package-lock.json

      - name: Install frontend deps
        run: |
          if [ -d frontend ]; then
            cd frontend && npm ci
          else
            npm ci
          fi

      - name: Frontend tests (optional if present)
        run: |
          if [ -d frontend ]; then
            cd frontend && npm run test --if-present && npm run build --if-present
          else
            npm run test --if-present && npm run build --if-present
          fi

      # ---------- Python (backend) ----------
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y curl=7.68.0-1ubuntu2* jq=1.6-1ubuntu0* || \
          sudo apt-get install -y curl jq

      - name: Install backend deps
        run: |
          python -m pip install --upgrade pip
          if [ -f webapp/requirements.txt ]; then
            pip install -r webapp/requirements.txt
          elif [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install requests beautifulsoup4 lxml pytest
          fi

      - name: Backend tests (pytest) -> junit + coverage
        env:
          PYTHONWARNINGS: ignore::DeprecationWarning
        run: |
          mkdir -p validation-reports/raw
          pytest -q --maxfail=1 --disable-warnings \
            --junitxml=validation-reports/raw/pytest-junit.xml || echo "No pytest tests found"

      - name: Show files
        run: ls -la && echo "----" && ls -la scripts || true

      - name: Verify validation script exists
        run: |
          if [ -f scripts/run-validation-suite.sh ]; then
            echo "✅ Found scripts/run-validation-suite.sh"
            ls -la scripts/run-validation-suite.sh
          else
            echo "❌ Missing scripts/run-validation-suite.sh"
            echo "Available files in scripts/:"
            ls -la scripts/ || echo "No scripts directory found"
            exit 1
          fi

      - name: Make validation script executable
        run: chmod +x scripts/run-validation-suite.sh || true

      # ---------- Validation Suite ----------
      - name: Run validation suite (must create validation-reports/final/index.html)
        env:
          APP_ENV: ci
          CI: true
        run: |
          set -e
          mkdir -p validation-reports
          ./scripts/run-validation-suite.sh
          test -f validation-reports/final/index.html || (echo "❌ No final index.html produced - suite failed" && exit 1)

      # ---------- Collect + Pages site ----------
      - name: Build public site from reports
        run: |
          set -e
          rm -rf public-site
          mkdir -p public-site
          cp -R validation-reports/final/* public-site/
          
          # Debug output
          echo "📁 Public site contents:"
          ls -la public-site/

      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: public-site

      - name: Upload raw reports artifact
        uses: actions/upload-artifact@v4
        with:
          name: validation-reports
          path: validation-reports
          if-no-files-found: error

  deploy:
    needs: validate-and-build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Output deployment URL
        run: |
          echo "## ✅ Validation Dashboard Deployed" >> $GITHUB_STEP_SUMMARY
          echo "🔗 ${{ steps.deployment.outputs.page_url }}" >> $GITHUB_STEP_SUMMARY
