name: Publish validation dashboard

on:
  workflow_dispatch:   # üëà this enables the "Run workflow" button
  push:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y curl jq

      - name: Install Node.js dependencies
        run: |
          npm ci || npm install
        continue-on-error: true

      - name: Install Python dependencies
        run: |
          pip install --upgrade pip
          pip install requests beautifulsoup4 lxml pytest
        continue-on-error: true

      - name: Show files
        run: ls -la && echo "----" && ls -la scripts || true

      - name: Verify validation script exists
        run: |
          if [ -f scripts/run-validation-suite.sh ]; then
            echo "‚úÖ Found scripts/run-validation-suite.sh"
            ls -la scripts/run-validation-suite.sh
          else
            echo "‚ùå Missing scripts/run-validation-suite.sh"
            echo "Available files in scripts/:"
            ls -la scripts/ || echo "No scripts directory found"
            exit 1
          fi

      - name: Make validation script executable
        run: chmod +x scripts/run-validation-suite.sh || true

      - name: Run validation suite (creates validation-reports/)
        env:
          APP_ENV: ci
          CI: true
        run: |
          # Ensure reports directory exists
          mkdir -p validation-reports
          
          # Run validation with error handling
          if ./scripts/run-validation-suite.sh; then
            echo "‚úÖ Validation suite completed successfully"
          else
            echo "‚ö†Ô∏è Validation suite completed with warnings/errors (exit code: $?)"
          fi
        continue-on-error: true

      - name: Collect reports for Pages
        run: |
          mkdir -p public-site
          
          # Copy validation reports with fallback handling
          if [ -d validation-reports/final ] && [ "$(ls -A validation-reports/final)" ]; then
            echo "üìã Copying final reports..."
            cp -R validation-reports/final/* public-site/
          elif [ -d validation-reports ] && [ "$(ls -A validation-reports)" ]; then
            echo "üìã Copying all validation reports..."
            cp -R validation-reports/* public-site/
          else
            echo "‚ö†Ô∏è No validation reports found, creating fallback page"
          fi
          
          # Ensure index.html exists with proper fallback
          if [ ! -f public-site/index.html ]; then
            cat > public-site/index.html << 'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>DealerScope Validation Dashboard</title>
            <style>
              body { font-family: system-ui, -apple-system, sans-serif; margin: 40px; line-height: 1.6; }
              .container { max-width: 800px; margin: 0 auto; }
              .warning { background: #fff3cd; border: 1px solid #ffeaa7; color: #856404; padding: 20px; border-radius: 8px; }
              .info { background: #d1ecf1; border: 1px solid #bee5eb; color: #0c5460; padding: 20px; border-radius: 8px; margin-top: 20px; }
            </style>
          </head>
          <body>
            <div class="container">
              <h1>üîç DealerScope Validation Dashboard</h1>
              <div class="warning">
                <h2>‚ö†Ô∏è No Validation Results Available</h2>
                <p>The validation suite has not generated reports yet. This could be due to:</p>
                <ul>
                  <li>First-time setup still in progress</li>
                  <li>Validation scripts need dependencies installed</li>
                  <li>Environment configuration required</li>
                </ul>
              </div>
              <div class="info">
                <h3>üìù Expected Reports</h3>
                <p>Once validation completes, you'll see reports for:</p>
                <ul>
                  <li><strong>Security:</strong> Vulnerability scans, dependency audits</li>
                  <li><strong>Performance:</strong> Load testing, database optimization</li>
                  <li><strong>Resilience:</strong> Circuit breakers, chaos testing</li>
                  <li><strong>Observability:</strong> Logging, metrics, tracing</li>
                  <li><strong>CI/CD:</strong> Pipeline validation, security scans</li>
                  <li><strong>Database:</strong> Migration testing, backup validation</li>
                  <li><strong>Frontend:</strong> Lighthouse audits, E2E testing</li>
                </ul>
              </div>
            </div>
          </body>
          </html>
          EOF
          fi
          
          # Debug output
          echo "üìÅ Public site contents:"
          ls -la public-site/ || echo "No public-site directory created"

      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: public-site

  deploy:
    needs: build-and-deploy
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Output deployment URL
        run: |
          echo "üöÄ Deployed to: ${{ steps.deployment.outputs.page_url }}"
          echo "## üìä Validation Dashboard Deployed" >> $GITHUB_STEP_SUMMARY
          echo "üîó **Dashboard URL**: ${{ steps.deployment.outputs.page_url }}" >> $GITHUB_STEP_SUMMARY
